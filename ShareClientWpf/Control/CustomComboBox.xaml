<ComboBox x:Class="ShareClientWpf.CustomComboBox"
          xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
          xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
          xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
          xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
          xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" xmlns:local="clr-namespace:ShareClientWpf"
          mc:Ignorable="d" 
          Style="{DynamicResource CustomComboBoxStyle}"
          d:DesignHeight="50" d:DesignWidth="300">

    <ComboBox.Resources>

        <Style x:Key="ComboBoxToggleButton" 
               TargetType="{x:Type ToggleButton}">

            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">

                        <Border  x:Name="RootBorder"
                                 CornerRadius="{Binding ButtonCornerRadius, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"
                                 BorderBrush="{TemplateBinding BorderBrush}"
                                 BorderThickness="{TemplateBinding BorderThickness}"
                                 Background="{TemplateBinding Background}">

                            <Path Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" 
                                  Fill="{TemplateBinding Foreground}" 
                                  HorizontalAlignment="Right" 
                                  Margin="4,4,12,4" 
                                  VerticalAlignment="Center"/>

                        </Border>

                        <ControlTemplate.Triggers>

                            <!-- IsMouseOver -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" 
                                        TargetName="RootBorder"
                                        Value="{Binding MouseOverBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"/>
                            </MultiDataTrigger>

                            <!-- IsChecked -->
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" 
                                        TargetName="RootBorder"
                                        Value="{Binding IsCheckedBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"/>
                            </MultiDataTrigger>

                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>

            </Setter>

        </Style>

        <DataTemplate x:Key="SelectionBoxItemTemplate">

            <TextBlock FontSize="{Binding FontSize, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"
                       Text="{Binding .}"/>

        </DataTemplate>

        <ControlTemplate x:Key="ComboBoxTemplate" 
                         TargetType="{x:Type ComboBox}">

            <Grid x:Name="templateRoot"
                  HorizontalAlignment="Stretch">

                <ToggleButton x:Name="ComboBoxToggleButton"
                              IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                              Style="{StaticResource ComboBoxToggleButton}" 
                              BorderBrush="{TemplateBinding BorderBrush}"
                              BorderThickness="{TemplateBinding BorderThickness}"
                              Background="{TemplateBinding Background}"/>

                <Popup x:Name="DropDownPopup"
                       IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" 
                       AllowsTransparency="true"
                       Placement="Bottom" 
                       PopupAnimation="Slide">

                    <theme:SystemDropShadowChrome x:Name="Shadow" 
                                                  Color="Transparent" 
                                                  MinWidth="{Binding ActualWidth, ElementName=templateRoot}"
                                                  MaxHeight="{TemplateBinding MaxDropDownHeight}">

                        <Border x:Name="DropDownBorder"
                                BorderThickness="{Binding PopupBorderThickness, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"
                                BorderBrush="{Binding PopupBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"
                                Background="{Binding PopupBackground, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"
                                CornerRadius="{Binding PopupCornerRadius, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"
                                MinWidth="{Binding ActualWidth, ElementName=templateRoot}" 
                                MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                Margin="0,0,4,4">

                            <local:CustomScrollViewer TabBrush="{Binding PopupScrollBarBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}">
                                <StackPanel RenderOptions.ClearTypeHint="Enabled">
                                    <ItemsPresenter  KeyboardNavigation.DirectionalNavigation="Contained" 
                                                     SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </StackPanel>
                            </local:CustomScrollViewer>

                        </Border>

                    </theme:SystemDropShadowChrome>
                </Popup>

                <ContentPresenter x:Name="contentPresenter" 
                                  ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                                  ContentTemplate="{StaticResource SelectionBoxItemTemplate}" 
                                  Content="{TemplateBinding SelectionBoxItem}" 
                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  IsHitTestVisible="false" 
                                  Margin="{TemplateBinding Padding}" 
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>

            <ControlTemplate.Triggers>

                <Trigger Property="HasDropShadow" SourceName="DropDownPopup" Value="true">
                    <Setter Property="Margin" TargetName="Shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="Shadow" Value="#71000000"/>
                </Trigger>

                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                </Trigger>

                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>

            </ControlTemplate.Triggers>

        </ControlTemplate>

        <Style x:Key="CustomComboBoxItemContainerStyle" TargetType="{x:Type ComboBoxItem}">

            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">

                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd"
                                CornerRadius="{Binding ItemSelectCornerRadius, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"
                                Margin="{Binding ItemMargin, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"
                                Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Padding="{Binding ItemPadding, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"
                                SnapsToDevicePixels="true">

                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                        </Border>

                        <ControlTemplate.Triggers>

                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>

                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="{Binding SelectedItemBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding SelectedItemBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"/>
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="{Binding MouseOverItemBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding MouseOverItemBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"/>
                            </Trigger>

                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="Background" TargetName="Bd" Value="{Binding MouseOverItemBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding MouseOverItemBrush, RelativeSource={RelativeSource FindAncestor, AncestorType=local:CustomComboBox}}"/>
                            </Trigger>

                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource CustomComboBoxItemContainerStyle}"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
        </Style>

    </ComboBox.Resources>

</ComboBox>
